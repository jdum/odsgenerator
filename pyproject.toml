[project]
name = "odsgenerator"
version = "1.11.4"
description = "Generate an OpenDocument Format .ods file from json or yaml file"
authors = [{ name = "Jérôme Dumonteil", email = "jerome.dumonteil@gmail.com" }]
readme = "README.md"
license = "MIT"
keywords = ["openDocument", "ODF", "ods", "json", "spreadsheet", "generator"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "Topic :: Text Processing",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.9,<4"
dependencies = ["odfdo>=3.7.7", "pyyaml>=5.0"]

[project.urls]
Homepage = "https://github.com/jdum/odsgenerator"
Repository = "https://github.com/jdum/odsgenerator"

[project.scripts]
odsgenerator = "odsgenerator.cli:main"

[dependency-groups]
doc = ["sphinx>=7.0", "myst-parser>=2.0.0"]
dev = [
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "coverage>=7.9.1",
    "mypy>=1.16.1",
    "mypy-extensions>=1.1.0",
    "typing-extensions>=4.14.0",
    "tox>=4.27.0",
    "tox-gh-actions>=3.3.0",
    "ruff>=0.12.1",
    "isort>=6.0.1",
    "types-pyyaml>=6.0.12.20250516",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.isort]
profile = "black"

[tool.ruff]
target-version = "py313"
exclude = [".venv"]
# Same as Black.
line-length = 88
indent-width = 4
fix = false
lint.select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E",
    "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
lint.ignore = [
    # LineTooLong
    #"E501",
    # DoNotAssignLambda
    #"E731",
    # Use specific rule codes when ignoring type issues
    #"PGH003",
    # check for execution of untrusted input
    #"S603",
    # Class attribute `open` is shadowing a Python builtin
    #"A003",
    # Use `X | Y` in `isinstance` call instead of `(X, Y)`
    #"UP038",
    # Avoid specifying long messages outside the exception class
    #"TRY003",
    # Use ternary operator
    #"SIM108",
    # Use of `assert` detected
    #"S101",
]

[tool.ruff.lint.per-file-ignores]
"tests/test_*" = ["S101", "S603"]

[tool.mypy]
files = ["src/odsgenerator"]
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true
[[tool.mypy.overrides]]
module = "odfdo"
ignore_missing_imports = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["odsgenerator"]

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
